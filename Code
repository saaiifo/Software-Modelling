from datetime import datetime

class DentalCompany:
    def __init__(self, name):
        self.name = name
        self.branches = [] # list to store all the branches of the dental company

    def set_branch(self, branch):
        self.branches.append(branch) # add a branch to the list of branches

    def delete_branch(self, branch):
        self.branches.remove(branch)  # remove a branch from the list of branches


class Branch:
    def __init__(self, address, phone_number, manager):
        self.address = address  # the address of the branch
        self.phone_number = phone_number  # the phone number of the branch
        self.manager = manager  # the manager of the branch
        self.staff = []  # list to store all the staff members of the branch
        self.services = []  # list to store all the services provided by the branch

    def set_staff(self, staff):
        self.staff.append(staff)  # add a staff member to the list of staff members

    def delete_staff(self, staff):
        self.staff.remove(staff)  # remove a staff member from the list of staff members

    def set_service(self, service):
        self.services.append(service)  # add a service to the list of services

    def delete_service(self, service):
        self.services.remove(service)  # remove a service from the list of services

    def book_appointment(self, patient, date, service, staff):
        appointment = Appointment(patient, date, service, staff)  # create a new appointment
        # add the appointment to the staff member's schedule
        staff.set_appointment(appointment)
        # add the appointment to the patient's list of appointments
        patient.appointments.append(appointment)

    def checkout(self, patient):
        total_cost = 0
        # calculate the total cost of all the appointments of the patient
        for appointment in patient.appointments:
            total_cost += appointment.service.cost
        # add 5% VAT to the total cost
        total_cost *= 1.05
        return total_cost


class Staff:
    def __init__(self, name, position, phone_number):
        # initialize the Staff object with name, position, phone number and an empty list for schedule.
        self.name = name
        self.position = position
        self.phone_number = phone_number
        self.schedule = []

    def set_appointment(self, appointment):
        # add the given appointment to the schedule list of this staff object.
        self.schedule.append(appointment)
        total_cost = 0
        # Calculate the cost of the appointment by adding the service cost to the total cost.
        total_cost += appointment.service.cost


class Patient:
    def __init__(self, name, phone_number):
        # initialize the Patient object with name, phone number and an empty list for appointments.
        self.name = name
        self.phone_number = phone_number
        self.appointments = []


class Manager(Staff):
    def __init__(self, name, position, phone_number, branch):
        # initialize the Manager object with name, position, phone number, and branch, by calling the superclass constructor.
        super().__init__(name, position, phone_number)
        self.branch = branch

    def get_branch(self):
        # return the branch attribute of this manager object.
        return self.branch


class Service:
    def __init__(self, name, description, cost):
        # initialize the Service object with name, description, and cost attributes.
        self.name = name
        self.description = description
        self.cost = cost


class Appointment:
    def __init__(self, patient, date, service, staff):
        # initialize the Appointment object with patient, date, service, and staff attributes.
        self.patient = patient
        self.date = date
        self.service = service
        self.staff = staff
        
        
        
'''
space between codes
'''

# create the dental company
bright_smiles = DentalCompany("Bright Smiles")

# create a manager
manager_1 = Manager("Saif", "Manager", "111-122", None)

# create a branch
branch_1 = Branch("Abu Dhabi", "123-121", manager_1)
manager_1.branch = branch_1

# add staff to the branch
receptionist_1 = Staff("Ahmed", "Receptionist", "111-123")
hygienist_1 = Staff("Ali", "Hygienist", "111-124")
dentist_1 = Staff("Sarah", "Dentist", "111-125")
branch_1.set_staff(receptionist_1)
branch_1.set_staff(hygienist_1)
branch_1.set_staff(dentist_1)

# create services offered by the branch
cleaning = Service("Cleaning", "Annualy teeth cleaning", 259.00)
filling = Service("Filling", "Tooth filling", 499.00)
implant = Service("Implant", "Tooth implant", 1499.00)
branch_1.set_service(cleaning)
branch_1.set_service(filling)
branch_1.set_service(implant)


'''
space between codes
'''

# a function to print details of a branch
def print_branch_details(branch):
    # Print the branch details
    print(f"\nBranch Details\n--------------")
    print(f"Address: {branch.address}")
    print(f"Phone Number: {branch.phone_number}")
    print(f"Manager: {branch.manager.name}")

    # print details of staff working at the branch
    print("\nStaff:")
    for staff in branch.staff:
        print(f"\tName: {staff.name}")
        print(f"\tPosition: {staff.position}")
        print(f"\tPhone Number: {staff.phone_number}")
        print("\tSchedule:")
        print('\n')

        # print the schedule of the current staff member
        for appointment in staff.schedule:
            print(f"\t\tDate: {appointment.date}")
            print(f"\t\tService: {appointment.service.name}")
            print(f"\t\tPatient: {appointment.patient.name}\n")

    # print details of services provided by the branch
    print("\nServices:")
    for service in branch.services:
        print(f"\tName: {service.name}")
        print(f"\tDescription: {service.description}")
        print(f"\tCost: {service.cost}\n")


# a function to print details of a patient
def print_patient_details(patient):
    # Print the patient details
    print(f"\nPatient Details\n---------------")
    print(f"Name: {patient.name}")
    print(f"Phone Number: {patient.phone_number}")

    # print the appointments for the current patient
    print("\nAppointments:")
    for appointment in patient.appointments:
        print(f"\tDate: {appointment.date}")
        print(f"\tService: {appointment.service.name}")
        print(f"\tStaff: {appointment.staff.name}")
        print("\n")


# a function to print details of a staff member
def print_staff_details(staff):
    # Print the staff member details
    print(f"\nStaff Details\n-------------")
    print(f"Name: {staff.name}")
    print(f"Position: {staff.position}")
    print(f"Phone Number: {staff.phone_number}")
    print('\n')

    # print the schedule of the current staff member
    for appointment in staff.schedule:
        print(f"\tDate: {appointment.date}")
        print(f"\tService: {appointment.service.name}")
        print(f"\tPatient: {appointment.patient.name}\n")

# a function to print details of a service
def print_service_details(service):
    # Print the service details
    print(f"\nService Details\n---------------")
    print(f"Name: {service.name}")
    print(f"Description: {service.description}")
    print(f"Cost: {service.cost}\n")

# create a patient and book an appointment
patient_2 = Patient("Khalid", "0506279376")
date_1 = '2023/4/18 @ 10:00 AM'  # April 18, 2023 at 10:00 AM
appointment_1 = branch_1.book_appointment(patient_2, date_1, implant, hygienist_1)

# print all details
print_branch_details(branch_1)
print_patient_details(patient_1)
print_staff_details(receptionist_1)
print_service_details(implant)

# checkout the patient
total_cost = branch_1.checkout(patient_2)
print(f"\n\n{patient_2.name} has to pay: ${total_cost:.2f}\n\n")

### TEST CASES

# Test Case 1 (# Adding branches)


branch1 = Branch('baitna', '02827386', 'saif')

print(branch1.address)
print(branch1.phone_number)
print(branch1.manager)

# Test Case 2 (# Adding Staff)


staff1 = Staff('Saif','receptionist','0509287364')

print(staff1.phone_number)
print(staff1.position)
print(staff1.name)

# Test Case 3 (# Adding Paitent)


patient1 = Patient('saif','0508273829')

print(patient1.name)
print(patient1.phone_number)

# Test Case 4 (# Adding Service)


service1 = Service('Flossing','Floss your teeth','15.00')

print(service1.cost)
print(service1.description)
print(service1.name)

# Test Case 5 (# Adding Manager)


manager1 = Manager('Saif','manager','0548975425',branch1.address)

print(manager1.name)
print(manager1.position)
print(manager1.phone_number)
print(manager1.branch)

# Test Case 6 (# Adding Appointment)


appointment1 = Appointment(patient1.name, '16/04/2023', service1.name, staff1.name)#Patient, date, service, staff

print(appointment1.patient)
print(appointment1.date)
print(appointment1.service)
print(appointment1.staff)
